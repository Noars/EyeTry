tasks.register('generateWindowsInstaller') {
    dependsOn(['unzipDistribution', 'prepareInnoSetupFiles'])
    group 'innosetup'
    doLast {

        def innoSetupDir = new File("${projectDir}/build/innosetup")

        exec {
            commandLine "C:\\Program Files (x86)\\Inno Setup 6\\ISCC.exe", "${innoSetupDir}\\setup.iss"
        }

        delete "${projectDir}/build/innosetup"
        delete "${projectDir}/build/${project.name}-windows-x64"
    }
}

tasks.register('generateWindowsInstallerInDocker') {
    dependsOn(['unzipDistribution', 'prepareInnoSetupFiles'])
    doLast {
        exec {
            workingDir projectDir
            commandLine "docker", "run", "--rm", "-i", "-v", "${projectDir}/build:/work", "amake/innosetup", "innosetup/setup.iss"
        }
    }
}

tasks.register('prepareInnoSetupFiles') {
    doLast {
        def innoSetupDir = new File("${projectDir}/build/innosetup")

        innoSetupDir.mkdir()

        copy {
            from("${projectDir}/gradle/innosetup/setup.iss.skel")
            rename("setup.iss.skel", "setup.iss")
            expand([
                    applicationVersion: "latest",
                    unpackedDirectory : "${project.name}-windows-x64"
            ])
            into(innoSetupDir)
        }

        copy {
            from("${projectDir}/gradle/templates/licence.txt")
            expand([
                    "date": new Date().format('yyyy-MM-dd')
            ])
            into(innoSetupDir)
        }

        copy {
            from("${projectDir}/gradle/innosetup/gazeicon.ico")
            into(innoSetupDir)
        }

        copy {
            from("${projectDir}/gradle/innosetup/gazeicon.bmp")
            into(innoSetupDir)
        }
    }
}

tasks.register('unzipDistribution', Copy) {
    dependsOn(['packageApp'])
    from zipTree("${projectDir}/build/distributions/${project.name}-windows-x64.zip")
    into "${projectDir}/build"
    doNotTrackState("Cannot access a file in the destination directory")
}
