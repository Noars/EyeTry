; InteraactionGaze Inno Setup Skeleton Script
;
; PLEASE NOTE:
;
; 1. This script is a SKELETON and is meant to be parsed by the Gradle 
;    task "innosetup" before handing it to the Inno Setup compiler (ISCC)
;
; 2. All VARIABLES with a dollar sign and curly brackets are replaced
;    by Gradle, e.g. "applicationVersion" below
;
; 3. The script is COPIED to build/innosetup before its run,
;    so all relative paths refer to this path!
;
; 4. All BACKSLASHES must be escaped 
;

[Setup]
AppId=EyeTry
AppName=EyeTry
AppVersion=${applicationVersion}
AppVerName=EyeTry ${applicationVersion}
AppPublisher=Univ. Grenoble Alpes - LIG - GETALP
AppPublisherURL=https://github.com/InteraactionGroup/EyeTry
AppSupportURL=https://github.com/InteraactionGroup/EyeTry/issues
AppUpdatesURL=https://github.com/InteraactionGroup/EyeTry/releases

SetupIconFile=gazeicon.ico
WizardStyle=modern
WizardImageFile=gazeicon.bmp
WizardSmallImageFile=gazeicon.bmp

DefaultDirName={commonpf}\\EyeTry
DefaultGroupName=InteraactionGroup
LicenseFile=licence.txt

OutputDir=..\\distributions
OutputBaseFilename=eyeTry-windows-x64-installer
;Compression=lzma
SolidCompression=yes

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"

[Files]
Source: "gazeicon.ico"; DestDir: "{app}\\bin"; Flags: ignoreversion
Source: "..\\${unpackedDirectory}\\bin\\*"; DestDir: "{app}\\bin"; Flags: ignoreversion
Source: "..\\${unpackedDirectory}\\lib\\*"; DestDir: "{app}\\lib"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\\${unpackedDirectory}\\license\\*"; DestDir: "{app}\\license"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\\EyeTry"; Filename: "{app}\\bin\\eyeTry-windows.bat"; IconFilename: "{app}\\bin\\gazeicon.ico"; Flags: runminimized
Name: "{group}\\Uninstall EyeTry"; Filename: "{uninstallexe}"; IconFilename: "{app}\\bin\\gazeicon.ico"
Name: "{commondesktop}\\EyeTry"; Filename: "{app}\\bin\\eyeTry-windows.bat"; Tasks: desktopicon; IconFilename: "{app}\\bin\\gazeicon.ico"

[Run]
Filename: "{app}\\bin\\eyeTry-windows.bat"; Description: "{cm:LaunchProgram,EyeTry}"; Flags: shellexec postinstall skipifsilent

[Code]
function GetUninstallString: string;
var
  sUnInstPath: string;
  sUnInstallString: String;
begin
  Result := '';
  sUnInstPath := ExpandConstant('Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\EyeTry_is1'); { Your App GUID/ID }
  sUnInstallString := '';
  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then
    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);
  Result := sUnInstallString;
end;

function IsUpgrade: Boolean;
begin
  Result := (GetUninstallString() <> '');
end;

function InitializeSetup: Boolean;
var
  V: Integer;
  iResultCode: Integer;
  sUnInstallString: string;
begin
  Result := True; { in case when no previous version is found }
  if RegValueExists(HKEY_LOCAL_MACHINE,'Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\EyeTry_is1', 'UninstallString') then  { Your App GUID/ID }
  begin
    V := MsgBox(ExpandConstant('An older version of EyeTry was detected. Do you want to uninstall it?'), mbInformation, MB_YESNO); { Custom Message if App installed }
    if V = IDYES then
    begin
      sUnInstallString := GetUninstallString();
      sUnInstallString :=  RemoveQuotes(sUnInstallString);
      Exec(ExpandConstant(sUnInstallString), '', '', SW_SHOW, ewWaitUntilTerminated, iResultCode);
      Result := True; { if you want to proceed after uninstall }
      { Exit; //if you want to quit after uninstall }
    end
    else
      Result := False; { when older version present and not uninstalled }
  end;
end;
